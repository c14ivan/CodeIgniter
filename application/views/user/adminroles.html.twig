{% extends '_layouts/index.html.twig' %}

{% block headext %}
<link rel="stylesheet" type="text/css" href="{{ asset_url()~'cssapp/general.css' }}" media="all">
{% endblock %}

{% block content %}
{% import '_tools/formElements.twig' as forms %}
<div class="row-fluid">
    <div class="box span12">
        <div class="box-header well">
            <h2>{{ lang('roles') }}</h2>
            <div class="box-icon">
                <a href="#" class="btn btn-minimize btn-round"><i class="icon-chevron-up"></i></a>
                <a href="#" class="btn btn-add btn-round addrole"><i class="icon-plus" title="{{ lang('addrole') }}"></i></a>
            </div>
        </div>
        <div class="box-content">
            <div class="roledt box box-content" style="display:none;">
				<i class="icon-remove closeedtrole" style="float:right"></i>
				<form id="roleedt" class="form-horizontal" method="post">
					{{ forms.campo({'tipo':'input','type':'hidden','name':'roleid'}) }}
					{{ forms.campo({'tipo':'input','type':'text','name':'name','label':lang('name'),'maxlength':45}) }}
					{{ forms.campo({'tipo':'input','type':'text','name':'shortname','label':lang('shortname'),'maxlength':10}) }}
					{{ forms.campo({'tipo':'textarea','label':lang('description'),'name':'description','cols':50}) }}
					<div class="form-actions">
						<p class="center span5">
                      		<button type="submit" class="btn btn-primary">{{ lang('save') }}</button>
                   		</p>
                   	</div>
				</form>
			</div>
			
            <table id="rolestable" class="table table-striped table-bordered bootstrap-datatable tabledata" style="width:100%;">
                <thead>
                    <tr>
                        <th data-priority="persistent">{{ lang('actions') }}<b></b></th>
                        <th>{{ lang('role') }}</th><th>{{ lang('shortname') }}</th><th>{{ lang('description') }}</th>
                    </tr>
                </thead>
                <tbody>
                </tbody>
            </table>
        </div>
    </div>
</div>
<div class="row-fluid">
    <div class="box span12">
        <div class="box-header well">
            <h2>{{ lang('role_capabilities') }}</h2>
        </div>
        <div class="box-content form-horizontal capscontainer">
        <input type="hidden" name="roleid" value="0">
            {% for cap in capabilities %}
                <div class="control-group">
                    <div class="control-label">{{ cap.capability }}</div>
                    <div class="controls">
                        <input data-no-uniform="true" type="checkbox" class="caps-toggle" data-id="{{ cap.id }}">
                    </div>
                </div>
            {% endfor %}
        </div>
    </div>
</div>
{% endblock %}
{% block jscode %}
<script type="text/javascript">
$().ready(function(){
	var readyswitch=false;
	$('.closeedtrole').click(function(){
		$('.roledt').slideUp();
		resetForm($('.roledt').find('form'));
		$('form#roleedt').find('input[name="shortname"]').removeAttr('readonly');
		$('.roledt').find('input[name=roleid]').val(0);
	});
	$('.addrole').click(function(){
		$('.closeedtrole').trigger('click');
		$('.roledt').slideDown();
	});
	var tableroles=$('#rolestable').dataTable({
        "sDom": "<'row-fluid'<'span6'l><'span6'f>r>t<'row-fluid'<'span12'i><'span12 center'p>>",
        "sPaginationType": "bootstrap",
        "oLanguage": {
            "sProcessing": "{{ lang('table_processing') }}",
            "sLengthMenu": "{{ lang('table_recordsperpage') }}",
            "sZeroRecords": "{{ lang('table_noregisters') }}",
            "sEmptyTable": "{{ lang('table_empty') }}",
            "sInfo": "{{ lang('table_pager') }}",
            "sInfoEmpty": "{{ lang('table_pagerempty') }}",
            "sInfoFiltered": "{{ lang('table_filtered') }}",
            "sSearch": "{{ lang('table_search') }}",
            "sLoadingRecords": "{{ lang('table_loading') }}",
            "oAria": {
                "sSortAscending": "{{ lang('table_sortAsc') }}",
                "sSortDescending": "{{ lang('table_sortDesc') }}",
            },
            "oPaginate": {
                "sFirst": "{{ lang('table_first') }}",
                "sLast": "{{ lang('table_last') }}",
                "sNext": "{{ lang('table_next') }}",
                "sPrevious": "{{ lang('table_previous') }}",
            },
        }
    });
    $('.caps-toggle').iphoneStyle({
        checkedLabel :'{{ lang('capability_on') }}',
        uncheckedLabel :'{{ lang('capability_off') }}',
        onChange: function(elem, value) {
            if(readyswitch){
            	roleid=$(elem).closest('.capscontainer').find('input[name=roleid]').val();
            	if(roleid>0){
            		$.ajax({
                        type:"POST",
                        url: '{{ site_url('user/editpermission') }}',
                        dataType:'json',
                        data: {role:roleid,perm:$(elem).attr('data-id'),val:value},
                        error:function (jqXHR, textStatus, errorThrown) {
                            console.log(JSON.stringify(jqXHR) + ' ' + textStatus + '  ' + errorThrown);
                        }
                    }).done(function (data) {
                    	if (data.ok){
                    		showNotification('{{ lang('capupdated') }}');
                        }
                    });
            	}
                }
            }
        });

    $('#roleedt').validate({
    	errorClass:'errorlabelform',
        elErrorClass:'errorlabel',
        ignore:':hidden.chzn',
        rules:{
        	name:{required: true,minlength:5,},
        	shortname:{required: true,minlength:5,lettersNumber:true,noSpace:true},
        	description:{required: true,minlength:5,},
        },
        messages:{
        	name:{
        		required: '{{ lang('required')|format('')}}',
        		minlength: '{{ lang('min_length')|format('',5)}}',
        		
        	},
        	shortname:{
        		required: '{{ lang('required')|format('')}}',
        		minlength: '{{ lang('min_length')|format('',5)}}',
        		lettersNumber:'{{ lang('alpha_numeric')|format('') }}',
        		noSpace:'{{ lang('no_spaces')|format('') }}'
        	},
        	description:{
        		required: '{{ lang('required')|format('')}}',
        		minlength: '{{ lang('min_length')|format('',5)}}',
        		
        	},
        },
        submitHandler: function(form) {
        	$.ajax({
                    type:"POST",
                    url: '{{ site_url('user/editrole') }}',
                    dataType:'json',
                    data: $(form).serializeObject(),
                    error:function (jqXHR, textStatus, errorThrown) {
                        console.log(JSON.stringify(jqXHR) + ' ' + textStatus + '  ' + errorThrown);
                    }
                }).done(function (data) {
                	if (data.ok){
                		$('.closeedtrole').trigger('click');
                		loadroles();
                	}else{
                		showNotification('{{ lang('ajaxerror') }}');
                	}
                });
        }
    });
    function loadroles(){
    	$.ajax({
            type:"POST",
            url: '{{ site_url('user/getroles') }}',
            dataType:'json',
            error:function (jqXHR, textStatus, errorThrown) {
                console.log(JSON.stringify(jqXHR) + ' ' + textStatus + '  ' + errorThrown);
            }
        }).done(function (data) {
        	tableroles.fnClearTable();
        	for (i in data.roles){
        		addroletable(data.roles[i].id,data.roles[i].name,data.roles[i].shortname,data.roles[i].description);
            }
        	tableroles.fnDraw();
        	dom_tableroles();
        });
    }
    function addroletable(roleid,rolename,shortname,description){
        htmledit='<a class="btn btn-info" href="javascript:void(0)" data-id="'+roleid+'" >'+
                '<i class="icon-edit icon-white editrole" title="{{ lang('edit') }}"></i></a>';
        htmladmin='<a class="btn btn-info" href="javascript:void(0)" data-id="'+roleid+'" >'+
                '<i class="icon-edit icon-white adminrole" title="{{ lang('view_capabilities') }}"></i></a>';
    	tableroles.fnAddData( [htmledit+htmladmin,rolename,shortname,description] );
    }
    function dom_tableroles(){
        $('.editrole').click(function(){
        	$('.addrole').trigger('click');
        	row=$(this).closest('tr');
        	$('form#roleedt').find('input[name="roleid"]').val($(this).closest('a').attr('data-id'));
        	$('form#roleedt').find('input[name="name"]').val($(row.find('td')[1]).html());
        	$('form#roleedt').find('input[name="shortname"]').val($(row.find('td')[2]).html());
        	$('form#roleedt').find('input[name="shortname"]').attr('readonly',true);
        	$('form#roleedt').find('textarea[name="description"]').val($(row.find('td')[3]).html());
        });
        $('.adminrole').click(function(){
            $('.capscontainer').slideUp();
            $('.capscontainer').find('input[name=roleid]').val($(this).closest('a').attr('data-id'));
            readyswitch=false;
            $.ajax({
                type:"POST",
                url: '{{ site_url('user/getrolecapabilities') }}',
                dataType:'json',
                data: {roleid:$(this).closest('a').attr('data-id')},
                error:function (jqXHR, textStatus, errorThrown) {
                    console.log(JSON.stringify(jqXHR) + ' ' + textStatus + '  ' + errorThrown);
                }
            }).done(function (data) {
                for (i in data.caps){
                    if(parseInt(data.caps[i].permission)==1){
                    	$('.capscontainer').find('input[type=checkbox][data-id='+data.caps[i].id+']').attr('checked',true);
                    }else{
                    	$('.capscontainer').find('input[type=checkbox][data-id='+data.caps[i].id+']').removeAttr('checked');
                    }
                }
                $('.caps-toggle').iphoneStyle("refresh");
                readyswitch=false;
                $.wait(function(){
                	readyswitch=true;
                	$('.capscontainer').slideDown();
                    },0.2);
            });
        });
    }
    loadroles();
    $('.capscontainer').slideUp();
});
</script>
{% endblock %}
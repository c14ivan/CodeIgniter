{% extends '_layouts/index.html.twig' %}

{% block headext %}
<link rel="stylesheet" type="text/css" href="{{ asset_url()~'cssapp/general.css' }}" media="all">
<link rel="stylesheet" type="text/css" href="{{ asset_url()~'css/flurid.css' }}" media="all">
{% endblock %}

{% block content %}
{% import '_tools/formElements.twig' as forms %}
<div class="row-fluid">
	<div class="box span6 ">
		<div class="box-header well">
			<h2>{{ lang('sc_plans') }}</h2>
			<div class="box-icon">
				<a href="#" class="btn btn_addform btn-round"><i class="icon-plus"></i></a>
			</div>
		</div>
		<div class="box-content">
			<div class="formcont box box-content" style="display:none;">
				<i class="icon-remove closeform" style="float:right"></i>
				<h2 class="edit" style="display:none;">{{ lang('sc_editplan') }}</h2>
				<h2 class="add" style="display:none;">{{ lang('sc_addplan') }}</h2>
				<form id="planform" class="form-horizontal">
					{{ forms.campo({'tipo':'input','type':'hidden','name':'planid'}) }}
					{{ forms.campo({'tipo':'input','type':'text','name':'planname','label':lang('sc_plan'),'maxlength':45}) }}
					{{ forms.campo({'tipo':'textarea','label':lang('description'),'name':'plandescription','cols':50}) }}
					{{ forms.campo({'tipo':'select','label':lang('sc_system'),'name':'plansystem','opciones':systems}) }}
					<div class="form-actions">
						<p class="center span5">
                      		<button type="submit" class="btn btn-primary">{{ lang('save') }}</button>
                   		</p>
                   	</div>
				</form>
			</div>
			<table id="planstable" class="table table-striped table-bordered bootstrap-datatable" style="width:100%;">
				<thead>
					<tr><th>{{ lang('sc_system') }}</th><th>{{ lang('sc_plan') }}</th><th style="min-width:30px;"></th></tr>
				</thead>
				<tbody>
					
				</tbody>
			</table>
		</div>
	</div>
	<div class="box span6">
		<div class="box-header well">
			<h2>{{ lang('sc_versions') }}</h2>
			<div class="box-icon">
				<a href="#" class="btn btn_addversion btn-round"><i class="icon-plus"></i></a>
			</div>
		</div>
		<div class="box-content">
		<div class="formversioncont box box-content" style="display:none;">
				<i class="icon-remove closeform" style="float:right"></i>
				<h2 class="edit" style="display:none;">{{ lang('sc_editplanversion') }}</h2>
				<h2 class="add" style="display:none;">{{ lang('sc_addplanversion') }}</h2>
				<form id="planversionform" class="form-horizontal">
					{{ forms.campo({'tipo':'input','type':'hidden','name':'scplanid'}) }}
					{{ forms.campo({'tipo':'input','type':'hidden','name':'scplanversionid'}) }}
					{{ forms.campo({'tipo':'input','type':'text','name':'scname','label':lang('sc_plan'),'maxlength':45}) }}
					{{ forms.campo({'tipo':'textarea','label':lang('description'),'name':'scdescription','cols':50}) }}
					{{ forms.campo({'tipo':'select','label':lang('sc_status'),'name':'scstatus',
						'opciones':config.school.systemstatus }) }}
					<div class="form-actions">
						<p class="center span5">
                      		<button type="submit" class="btn btn-primary">{{ lang('save') }}</button>
                   		</p>
                   	</div>
				</form>
			</div>
			<table id="planversionstable" class="table table-striped table-bordered bootstrap-datatable" style="width:100%;">
				<thead>
					<tr><th>{{ lang('name') }}</th><th>{{ lang('description') }}</th><th>{{ lang('sc_status') }}</th><th></th></tr>
				</thead>
				<tbody>
					
				</tbody>
			</table>
		</div>
	</div>
</div>
<div class="row-fluid" style="display:none;">
    <div class="box span12">
    	<div class="box-header well">
    		<h2><i class="icon-pencil"></i>{{ lang('sc_versioncfg') }}</h2>
    		<div class="box-icon">
    			<a href="#" class="btn btn-setting btn-round"><i class="icon-plus"></i></a>
    		</div>
    	</div>
    	<div class="box-content versioncontent">
    		<div class="row-fluid">
    			<div class="box span6 form-horizontal">
    				{{ forms.campo({tipo:'input',type:'hidden',value:'',name:'versionid'})}}
    				{{ forms.campo({tipo:'input',type:'label',label:lang('name'),value:'',id:'versionname'})}}
    				{{ forms.campo({tipo:'input',type:'label',label:lang('description'),value:'',id:'versiondesc'})}}
    				{{ forms.campo({tipo:'input',type:'label',label:lang('sc_status'),value:'',id:'versionstatus'})}}
    			</div>
    			<div class="box span6">
    				<table id="subjectable" class="table table-striped table-bordered bootstrap-datatable" style="width:100%;">
    					<thead>
    						<tr><th data-name='area'>{{ lang('sc_areacol') }}</th><th>{{ lang('sc_subject') }}</th><th>{{ lang('sc_abbr') }}</th></tr>
    					<thead>
    					<tbody>
    					</tbody>
    					<tfoot>
    						<tr><th class="filter"></th><th></th><th></th></tr>	
    					</tfoot>
    				</table>
    			</div>
    		</div>
    		<div class="row-fluid">
    			<div class="span12 flurid">
    				<div class="row" id="plancontent">
    				</div>
    			</div>
    		</div>
    	</div>
	</div>
</div>
<div class="modal hide fade" id="asignsubject">
	<form id="asignsubjectform">
	<div class="modal-header">
		<button type="button" class="close" data-dismiss="modal">Ã—</button>
        <h3>{{ lang('sc_asignsubject') }}</h3>
    </div>
    <div class="modal-body">
    	<div class="form-horizontal">
			{{ forms.campo({tipo:'input','type':'hidden',name:'subject'}) }}
			{{ forms.campo({tipo:'input','type':'hidden',name:'version'}) }}
			{{ forms.campo({tipo:'input','type':'hidden',name:'cicle'}) }}
			{{ forms.campo({tipo:'input','type':'text',name:'ih',label:lang('sc_ih')}) }}
			{{ forms.campo({tipo:'input','type':'text',name:'credits',label:lang('sc_credits')}) }}
		</div>
	</div>
    <div class="modal-footer">
        <div style="text-align: center;">
			<a href="#" class="btn" data-dismiss="modal">{{ lang('cancel') }}</a>
            <button type="submit" class="btn btn-primary">{{ lang('save') }}</button>
        </div>
    </div>
	</form>
</div>
{% endblock %}
{% block jscode %}
<script type="text/javascript" src="{{ asset_url()~'jsapp/tables.js' }}"></script>
<script type="text/javascript">
$(document).ready(function() {
	var versionstatus= {{ config.school.subjectversionstatus|json_encode() }};
	
	var tablesubjects=$('#subjectable').dataTable({
        "sDom": "<'row-fluid'<'span12'f>r>t<'row-fluid'<'span12'i><'span12 center'p>>",
        "sPaginationType": "bootstrap",
        "oLanguage": {
            "sProcessing": "{{ lang('table_processing') }}",
            "sLengthMenu": "{{ lang('table_recordsperpage') }}",
            "sZeroRecords": "{{ lang('table_noregisters') }}",
            "sEmptyTable": "{{ lang('table_empty') }}",
            "sInfo": "{{ lang('table_pager') }}",
            "sInfoEmpty": "{{ lang('table_pagerempty') }}",
            "sInfoFiltered": "{{ lang('table_filtered') }}",
            "sSearch": "{{ lang('table_search') }}",
            "sLoadingRecords": "{{ lang('table_loading') }}",
            "oAria": {
                "sSortAscending": "{{ lang('table_sortAsc') }}",
                "sSortDescending": "{{ lang('table_sortDesc') }}",
            },
            "oPaginate": {
                "sFirst": "{{ lang('table_first') }}",
                "sLast": "{{ lang('table_last') }}",
                "sNext": "{{ lang('table_next') }}",
                "sPrevious": "{{ lang('table_previous') }}",
            },
        }
    });
	$('.btn_addform').click(function(){
		$(this).closest('.box').find('.formcont').slideDown();
		resetForm($(this).closest('.box').find('form'));
		$('form#planform').find('input[name=planid]').val(0);
		$('form#planform').find('select[name=plansystem]').closest('.control-group').slideDown();
	    $('form#planform').find('select[name=plansystem]').find('option').removeAttr('selected');
	    $('form#planform').find('select[name=plansystem]').trigger("liszt:updated");
	});
	$('.btn_addversion').click(function(){
		if ($(this).closest('.box').find('form').find('input[name=scplanid]').val()>0){
			$(this).closest('.box').find('.formversioncont').slideDown();
			resetForm($(this).closest('.box').find('form'));
			if ($(this).closest('.box').find('form').find('input[name=scplanversionid]').val()>0){
				$(this).closest('.box').find('form').find('input[name=scplanversionid]').closest('.control-group').slideUp();
			}else{
				$(this).closest('.box').find('form').find('input[name=scplanversionid]').closest('.control-group').slideDown();
			}
		}else{
			showNotification('{{ lang('sc_chooseplan') }}');
		}
	});
	$('.closeform').click(function(){
		resetForm($(this).closest('.box').find('form'));
		$(this).closest('.box').slideUp();
	});
	$('#asignsubjectform').validate({
		errorClass:'errorlabelform',
 	   	elErrorClass:'errorlabel',
 	   	rules:{
 	   		ih:{required:true,number:true},
 	   		credits:{required:true,number:true},
 	   	},
 	   	messages:{
    		ih:{required:'{{ lang('required')|format('')}}',number:'{{ lang('is_numeric')|format('')}}'},
  	  		credits:{required:'{{ lang('required')|format('')}}',number:'{{ lang('is_numeric')|format('')}}'},
    	},
    	submitHandler: function(form) {
    		$.ajax({
                type:"POST",
                url: '{{ site_url('school/asignsubject') }}',
                dataType:'json',
                data: $(form).serializeObject(),
                error:function (jqXHR, textStatus, errorThrown) {
                    console.log(JSON.stringify(jqXHR) + ' ' + textStatus + '  ' + errorThrown);
                }
            }).done(function(data){
            	asignsubjectli(data.cicle,data.subjectid,data.ih,data.credits,data.subject,data.shortname);
            	
				dom_asignments();
				$('#asignsubject').find('button.close').trigger('click');
				
				resetForm($('#asignsubjectform'));
				$('#asignsubjectform').find('input[name=subject]').val(0);
				$('#asignsubjectform').find('input[name=version]').val(0);
				$('#asignsubjectform').find('input[name=cicle]').val(0);
				
			});
    	}
	});
	$('#planversionform').validate({
		errorClass:'errorlabelform',
 	   	elErrorClass:'errorlabel',
 	   	rules:{
 	   		scname:{required:true},
 	   		scdescription:{required:true},
 	   	},
 	   	messages:{
    		scname:{required:'{{ lang('required')|format('')}}'},
  	  		scdescription:{required:'{{ lang('required')|format('')}}'},
    	},
    	submitHandler: function(form) {
    		$.ajax({
                type:"POST",
                url: '{{ site_url('school/addplanversion') }}',
                dataType:'json',
                data: $(form).serializeObject(),
                error:function (jqXHR, textStatus, errorThrown) {
                    console.log(JSON.stringify(jqXHR) + ' ' + textStatus + '  ' + errorThrown);
                }
            }).done(function (data) {
            
            	resetForm($('form#planversionform'));
            	dom_tableversions();
            	loadplanversion(data.planid);
            });
    	}
	});
	$('#planform').validate({
		errorClass:'errorlabelform',
    	elErrorClass:'errorlabel',
    	rules:{
    		planname:{required:true},
    		plandescription:{required:true},
    	},
    	messages:{
    		planname:{required:'{{ lang('required')|format('')}}'},
    		plandescription:{required:'{{ lang('required')|format('')}}'},
    	},
   	 	submitHandler: function(form) {
    		$.ajax({
                type:"POST",
                url: '{{ site_url('school/addplan') }}',
                dataType:'json',
                data: $(form).serializeObject(),
                error:function (jqXHR, textStatus, errorThrown) {
                    console.log(JSON.stringify(jqXHR) + ' ' + textStatus + '  ' + errorThrown);
                }
            }).done(function (data) {
            
            	resetForm($('form#planform'));
            	$('form#planform').closest('.row-fluid').find('.closeform').trigger('click');
            	loadplans();
            });
    	}
	});
	var tableplans=$('#planstable').dataTable({
        "sDom": "<'row-fluid'<'span12'f>r>t<'row-fluid'<'span12'i><'span12 center'p>>",
        "sPaginationType": "bootstrap",
        "oLanguage": {
            "sProcessing": "{{ lang('table_processing') }}",
            "sLengthMenu": "{{ lang('table_recordsperpage') }}",
            "sZeroRecords": "{{ lang('table_noregisters') }}",
            "sEmptyTable": "{{ lang('table_empty') }}",
            "sInfo": "{{ lang('table_pager') }}",
            "sInfoEmpty": "{{ lang('table_pagerempty') }}",
            "sInfoFiltered": "{{ lang('table_filtered') }}",
            "sSearch": "{{ lang('table_search') }}",
            "sLoadingRecords": "{{ lang('table_loading') }}",
            "oAria": {
                "sSortAscending": "{{ lang('table_sortAsc') }}",
                "sSortDescending": "{{ lang('table_sortDesc') }}",
            },
            "oPaginate": {
                "sFirst": "{{ lang('table_first') }}",
                "sLast": "{{ lang('table_last') }}",
                "sNext": "{{ lang('table_next') }}",
                "sPrevious": "{{ lang('table_previous') }}",
            },
        }
    });
	var tableplanversions=$('#planversionstable').dataTable({
        "sDom": "<'row-fluid'<'span12'f>r>t<'row-fluid'<'span12'i><'span12 center'p>>",
        "sPaginationType": "bootstrap",
        "oLanguage": {
            "sProcessing": "{{ lang('table_processing') }}",
            "sLengthMenu": "{{ lang('table_recordsperpage') }}",
            "sZeroRecords": "{{ lang('table_noregisters') }}",
            "sEmptyTable": "{{ lang('table_empty') }}",
            "sInfo": "{{ lang('table_pager') }}",
            "sInfoEmpty": "{{ lang('table_pagerempty') }}",
            "sInfoFiltered": "{{ lang('table_filtered') }}",
            "sSearch": "{{ lang('table_search') }}",
            "sLoadingRecords": "{{ lang('table_loading') }}",
            "oAria": {
                "sSortAscending": "{{ lang('table_sortAsc') }}",
                "sSortDescending": "{{ lang('table_sortDesc') }}",
            },
            "oPaginate": {
                "sFirst": "{{ lang('table_first') }}",
                "sLast": "{{ lang('table_last') }}",
                "sNext": "{{ lang('table_next') }}",
                "sPrevious": "{{ lang('table_previous') }}",
            },
        }
    });
	function addplan(planid,system,plan){
		var htmledit='';
		htmledit='<i class="icon-edit editplan" data-id="'+planid+'"></i><i class="icon-chevron-right adminplan" data-id="'+planid+'"></i>';
		tableplans.fnAddData( [system,plan,htmledit] );
	}
	function loadplans(){
		$.ajax({
                type:"POST",
                url: '{{ site_url('school/getplans') }}',
                dataType:'json',
                error:function (jqXHR, textStatus, errorThrown) {
                    console.log(JSON.stringify(jqXHR) + ' ' + textStatus + '  ' + errorThrown);
                }
            }).done(function (data) {
            	tableplans.fnClearTable();
            	for (i in data.plans){
            		addplan(data.plans[i].id,data.plans[i].sysname,data.plans[i].name);
            	}
            	$('select#scarea').trigger("liszt:updated");
				dom_tablesplans();
				tableplans.fnDraw();
            });
	}
	function addplanversion(planversionid,name,description,status){
		var htmledit='';
		htmledit='<i class="icon-edit adminplanversion" data-id="'+planversionid+'"></i>';
		tableplanversions.fnAddData( [name,description,status,htmledit] );
	}
	function dom_tableversions(){
		$('.adminplanversion').click(function(){
			loadplanversion($(this).attr('data-id'));
		});
	}
	function dom_tablesplans(){
		$('.adminplan').click(function(){
			$('form#planversionform').find('input[name=scplanid]').val($(this).attr('data-id'));
			$(this).closest('table').find('tr.selectedplan').removeClass('selectedplan');
			$(this).closest('tr').addClass('selectedplan');
			$.ajax({
                type:"POST",
                url: '{{ site_url('school/getplanversions') }}',
                dataType:'json',
                data:{planid:$(this).attr('data-id')},
                error:function (jqXHR, textStatus, errorThrown) {
                    console.log(JSON.stringify(jqXHR) + ' ' + textStatus + '  ' + errorThrown);
                }
            }).done(function (data) {
            	tableplanversions.fnClearTable();
            	for (i in data.planversions){
            		addplanversion(data.planversions[i].id,data.planversions[i].name,data.planversions[i].description,
            		versionstatus[data.planversions[i].status]);
            	}
            	$('select#scarea').trigger("liszt:updated");
				dom_tableversions();
				tableplanversions.fnDraw();
            });
		});
		$('.editplan').click(function(){
			$('form#planversionform').find('input[name=scplanid]').val($(this).attr('data-id'));
			$(this).closest('table').find('tr.selectedplan').removeClass('selectedplan');
			$(this).closest('tr').addClass('selectedplan');
			$.ajax({
                type:"POST",
                url: '{{ site_url('school/getplan') }}',
                dataType:'json',
                data:{planid:$(this).attr('data-id')},
                error:function (jqXHR, textStatus, errorThrown) {
                    console.log(JSON.stringify(jqXHR) + ' ' + textStatus + '  ' + errorThrown);
                }
            }).done(function (data) {
            	//$('form#planform').closest('.row-fluid').find('.closeform').trigger('click');
            	$('form#planform').closest('.row-fluid').find('.btn_addform').trigger('click');
            	$('form#planform').find('input[name=planid]').val(data.plan.id);
            	$('form#planform').find('input[name=planname]').val(data.plan.name);
            	
            	$('form#planform').find('select[name=plansystem]').closest('.control-group').slideUp();
            	$('form#planform').find('select[name=plansystem]').find('option').removeAttr('selected');
            	$('form#planform').find('select[name=plansystem]').find('option[value='+data.plan.cssystemid+']').attr('selected',true);
            	
            	$('form#planform').find('select[name=plansystem]').trigger("liszt:updated");
            	$('form#planform').find('textarea[name=plandescription]').val(data.plan.description);
            	
            });
		});
	}
	function dom_asignments(){
		$('.editasign').click(function(){
			$('form#asignsubjectform').find('input[name=subject]').val($(this).closest('li').attr('data-id'));
			$('form#asignsubjectform').find('input[name=version]').val($('.versioncontent').find('input[name=versionid]').val());
			$('form#asignsubjectform').find('input[name=cicle]').val($(this).closest('li').find('a').attr('data-cicle'));
			$('form#asignsubjectform').find('input[name=ih]').val($(this).closest('li').find('a').attr('data-ih'));
			$('form#asignsubjectform').find('input[name=credits]').val($(this).closest('li').find('a').attr('data-cred'));
			$('#asignsubject').modal({'show':true});
		});
		$('.removeasign').click(function(){
			$.ajax({
                type:"POST",
                url: '{{ site_url('school/unasignsubject') }}',
                dataType:'json',
                data:{subject:$(this).closest('li').attr('data-id'),cicle:$(this).closest('li').find('a').attr('data-cicle'),version:$('.versioncontent').find('input[name=versionid]').val()},
                error:function (jqXHR, textStatus, errorThrown) {
                    console.log(JSON.stringify(jqXHR) + ' ' + textStatus + '  ' + errorThrown);
                }
            }).done(function (data) {
                if (data.ok){
                	showNotification('{{ lang('deleteok') }}');
                    $('.ciclecontent[data-id='+data.cicle+']').find('li[data-id='+data.subjectid+']').remove();
                    loadsubjects();
                }
            });
		});
	}
	function asignsubjectli(cicle,subjectid,ih,credits,subject,shortname){
		var htmlli='<a href="#" data-ih="'+ih+'" data-cred="'+credits+'" data-cicle="'+cicle+'"'+
	                        'data-rel="popover" data-content="<b>{{ lang('sc_ih')}}:</b> '+ih+'<br>'+
            				'<b>{{ lang('sc_credits')}}:</b> '+credits+'<br>" title="'+subject+'">'+shortname+'</a>'+
            				'<i class="icon-edit editasign"></i>'+
            				'<i class="icon-remove removeasign"></i>';
        if($('.ciclecontent[data-id='+cicle+']').find('li[data-id='+subjectid+']').length>0){
            $('.ciclecontent[data-id='+cicle+']').find('li[data-id='+subjectid+']').html(htmlli)
        }else{
            $('.ciclecontent[data-id='+cicle+']').append('<li data-id="'+subjectid+'">'+htmlli+'</li>');
        }
        
        if($('#subjectable').find('tr[data-id='+subjectid+']').length>0){
			tablesubjects.fnDeleteRow(tablesubjects.fnGetPosition($('#subjectable').find('tr[data-id='+subjectid+']')[0]));
    		loadfilters();
		}
        $('[rel="popover"],[data-rel="popover"]').popover();
	}
	function loadplanversion(planversionid){
		$('.versioncontent').closest('.row-fluid').slideUp();
		loadsubjects();
		$.ajax({
                type:"POST",
                url: '{{ site_url('school/getdataversion') }}',
                dataType:'json',
                data:{versionid:planversionid},
                error:function (jqXHR, textStatus, errorThrown) {
                    console.log(JSON.stringify(jqXHR) + ' ' + textStatus + '  ' + errorThrown);
                }
            }).done(function (data) {
				$('.versioncontent').closest('.row-fluid').slideDown();
				console.log(data);
				$('.versioncontent').find('input[name=versionid]').val(data.versionid);
				$('#div_versionname').find('.etiqueta label').html(data.versiondata.name)
				$('#div_versiondesc').find('.etiqueta label').html(data.versiondata.description)
				$('#div_versionstatus').find('.etiqueta label').html(versionstatus[data.versiondata.status])
				$('#plancontent').empty();
				for (i in data.cicles){
					oddeven='odd';
					if(parseInt((parseInt(i)+1)/2)==(parseInt(i)+1)/2) oddeven='even';
					if(data.cicles.length==(parseInt(i)+1)){ oddeven+= ' last';}
					$('#plancontent').append(
					'<div class="column width_1/'+data.cicles.length+' '+oddeven+'">'+
					'<div class="colheader">'+data.cicles[i].name+'</div>'+
					'<ul class="ciclecontent wide-list" data-id="'+data.cicles[i].id+'"></ul>'+
					'</div>');
				}
				for (i in data.subasigned){
					asignsubjectli(data.subasigned[i].sccicleid,data.subasigned[i].id,data.subasigned[i].ih,data.subasigned[i].credits,data.subasigned[i].name,data.subasigned[i].shortname)
				}
				dom_asignments();
				$('.ciclecontent').droppable({
					accept: ".dragsubject",
					drop: function( event, ui ) {
						resetForm($('form#asignsubjectform'));
						$('form#asignsubjectform').find('input[name=subject]').val(ui.helper.closest('tr').attr('data-id'));
						$('form#asignsubjectform').find('input[name=version]').val($('.versioncontent').find('input[name=versionid]').val());
						$('form#asignsubjectform').find('input[name=cicle]').val($(this).attr('data-id'));
						$('#asignsubject').modal({'show':true});
	
      				}
				}).sortable({
					update: function(event, ui) {
						//create the array that hold the positions...
            			var order = []; 
            			//loop trought each li...
            			$(ui.item).closest('ul').find('li').each( function(e) {
            				//add each li position to the array...     
               				// the +1 is for make it start from 1 instead of 0
               				order[parseInt($(this).attr('data-id'))]=$(this).index() + 1;
            			});
						$.ajax({
                			type:"POST",
                				url: '{{ site_url('plan/ordersubjects') }}',
                				dataType:'json',
                				data: {'order':order,'version':$('.versioncontent').find('input[name=versionid]').val()},
                				error:function (jqXHR, textStatus, errorThrown) {
                    			console.log(JSON.stringify(jqXHR) + ' ' + textStatus + '  ' + errorThrown);
                			}
            			}).done(function(data){
            				showNotification('{{ lang('sc_subjectsort') }}');
            			});
        			}
				});
            });
	}
	function loadfilters(){
    	$("#subjectable tfoot th.filter").each( function ( i ) {
			if ($(this).hasClass('filter')){
        		$(this).html(fnCreateSelect( tablesubjects.fnGetColumnData(i),'sel_'+$($('thead th')[i]).attr('data-name'),'{{ lang('selectanoption') }}') );
        		if($(this).find('option').not([value=0]).length==0){
        			$(this).slideUp();
        		}
       	 		$('select', this).change( function () {
       	 			if($(this).val()!='{{ lang('selectanoption') }}'){
       	 				tablesubjects.fnFilter( $(this).val(), i );
       	 			}else{
       	 				tablesubjects.fnFilter('',i);
       	 				tablesubjects.fnFilter('');
       	 			}
        		});
        	}
    	});
	}
	function loadsubjects(){
		$.ajax({
        	type:"POST",
            url: '{{ site_url('school/getsubjects') }}',
            dataType:'json',
            error:function (jqXHR, textStatus, errorThrown) {
            	console.log(JSON.stringify(jqXHR) + ' ' + textStatus + '  ' + errorThrown);
            }
            }).done(function(data){
            	tablesubjects.fnDestroy();
				$('#subjectable').find('tbody').empty();
				for (i in data.subjects){
					$('#subjectable').find('tbody').append(
						'<tr data-id="'+data.subjects[i].id+'">'+
							'<td>'+data.subjects[i].areaname+'</td>'+
							'<td>'+data.subjects[i].name+'</td>'+
							'<td class="dragsubject">'+data.subjects[i].shortname+'</td></tr>'
					);
				}
				tablesubjects=$('#subjectable').dataTable({
        			"sDom": "<'row-fluid'<'span12'f>r>t<'row-fluid'<'span12'i><'span12 center'p>>",
        			"sPaginationType": "bootstrap",
        			"oLanguage": {
       			     "sProcessing": "{{ lang('table_processing') }}",
       			     "sLengthMenu": "{{ lang('table_recordsperpage') }}",
     			     "sZeroRecords": "{{ lang('table_noregisters') }}",
     			     "sEmptyTable": "{{ lang('table_empty') }}",
            		 "sInfo": "{{ lang('table_pager') }}",
            		 "sInfoEmpty": "{{ lang('table_pagerempty') }}",
            		 "sInfoFiltered": "{{ lang('table_filtered') }}",
            		 "sSearch": "{{ lang('table_search') }}",
            		 "sLoadingRecords": "{{ lang('table_loading') }}",
            		 "oAria": {
                		"sSortAscending": "{{ lang('table_sortAsc') }}",
                		"sSortDescending": "{{ lang('table_sortDesc') }}",
            		 },
            		 "oPaginate": {
                	 	"sFirst": "{{ lang('table_first') }}",
                		"sLast": "{{ lang('table_last') }}",
                		"sNext": "{{ lang('table_next') }}",
                		"sPrevious": "{{ lang('table_previous') }}",
            		},
        		}
    		});
			$('.dragsubject').draggable({helper:'clone'});
    		loadfilters();
        });
	}
	loadplans();
});
</script>
{% endblock %}